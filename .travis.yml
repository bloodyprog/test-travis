language: cpp

notification:
    email: false

addons:
    apt:
        sources: [ 'ubuntu-toolchain-r-test' ]
        packages:
            - libsqlite3-dev

matrix:
    include:
        - os: linux
          compiler: gcc
          env: LINUX_TEST=main
          addons:
            apt:
                sources: [ 'ubuntu-toolchain-r-test' ]
                packages:
                    - gcc-5
                    - libsqlite3-dev

        - os: linux
          compiler: clang
          env: LINUX_TEST=clang-3.6
          addons:
            apt:
                sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6' ]
                packages:
                    - clang-3.6

        - os: linux
          compiler: clang
          env: LINUX_TEST=clang-3.7
          addons:
            apt:
                sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7' ]
                packages:
                    - clang-3.7

        - os: linux
          compiler: clang
          env: LINUX_TEST=clang-3.8
          addons:
            apt:
                sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise' ]
                packages:
                    - clang-3.8

        - os: osx
          compiler: clang

    allow_failures:
        - env: LINUX_TEST=clang-3.6
        - env: LINUX_TEST=clang-3.7
        - env: LINUX_TEST=clang-3.8

before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew update;
        brew install gcc5;
        brew install gcc6;
        brew install llvm38;
        brew install sqlite;
      fi

    - if [[ "$LINUX_TEST" == "main" ]]; then
        dpkg -L libsqlite3-dev;
      fi

    - ./download-premake.sh $TRAVIS_OS_NAME

before_script:
    - if [[ "$LINUX_TEST" == "main" ]]; then
        gcc-5 --version;
      fi

    - if [[ "$LINUX_TEST" == "clang-3.6" ]]; then
        ls -l /usr/lib/llvm-3.6/bin;
        clang++-3.6 --version;
        clang-3.6 --version;
      fi

    - if [[ "$LINUX_TEST" == "clang-3.7" ]]; then
        ls -l /usr/lib/llvm-3.7/bin;
        clang++-3.7 --version;
        clang-3.7 --version;
      fi

    - if [[ "$LINUX_TEST" == "clang-3.8" ]]; then
        ls -l /usr/lib/llvm-3.8/bin;
        clang++-3.8 --version;
        clang-3.8 --version;
      fi

script:
    - ./premake5 --version
    - $CXX --version
